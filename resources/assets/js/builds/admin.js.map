{"version":3,"names":[],"mappings":"","sources":["admin.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar _Admin = require(\"./components/Admin\");\n\nvar _Admin2 = _interopRequireDefault(_Admin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar admin = new _Admin2.default.sharedInstance();\n\n$(function () {\n\n    var targetId = 0;\n\n    $(\".delete-btn\").each(function () {\n        var _this = this;\n\n        $(this).on('click', function (ev) {\n            ev.preventDefault();\n            admin.showWarningAlert({\n                title: '确定该删除操作?',\n                text: '删除后将无法撤销',\n                confirm: '我确认!',\n                cancel: '手贱了'\n            }, function () {\n                targetId = $($(_this).parents(\"tr\")[0]).attr('data-id');\n                var url = $($(_this).parents(\"table\")[0]).attr('action-url') + '/' + targetId;\n                deleteRecord(url, 'DELETE');\n            });\n\n            return false;\n        });\n    });\n\n    $(\".confirm-button.delete\").each(function () {\n        var _this2 = this;\n\n        $(this).on('click', function (ev) {\n            ev.preventDefault();\n            var redirect = $(_this2).attr('redirect');\n\n            admin.showWarningAlert({\n                title: '确定该删除操作?',\n                text: '删除后将无法撤销',\n                confirm: '我确认!',\n                cancel: '手贱了'\n            }, function () {\n                deleteRecord(window.location.href, 'DELETE', null, null, function () {\n                    setTimeout(function () {\n                        return window.location.href = redirect;\n                    }, 500);\n                });\n            });\n\n            return false;\n        });\n    });\n\n    $(\".edit-btn\").each(function () {\n        var _this3 = this;\n\n        $(this).on('click', function (ev) {\n            ev.preventDefault();\n\n            window.location.href = $($(_this3).parents(\"table\")[0]).attr('action-url') + '/' + $($(_this3).parents(\"tr\")[0]).attr('data-id');\n\n            return false;\n        });\n    });\n\n    function deleteRecord(url, type, ids, action, callback) {\n        $.ajax({\n            url: url,\n            type: type,\n            data: ids ? {\n                _token: $(\"meta[name=_token]\").attr('content'),\n                userIDs: ids,\n                action: action\n            } : { _token: $(\"meta[name=_token]\").attr('content') },\n            dataType: 'json',\n            success: function success(data) {\n                if (data.status != 'error') {\n                    swal({\n                        title: data.message,\n                        timer: 1050,\n                        type: 'success',\n                        showConfirmButton: false\n                    });\n                    $(\"tr[data-id=\" + targetId + \"]\").fadeOut();\n                    setTimeout(function () {\n                        return $(\"tr[data-id=\" + targetId + \"]\").remove();\n                    }, 500);\n                    if (callback) {\n                        callback();\n                    }\n                } else {\n                    toastr.error(data.message);\n                }\n            },\n            error: function error(err) {\n                toastr.error(err.responseText);\n            }\n        });\n    }\n\n    $(\"[editor]\").summernote({\n        lang: 'zh-CN',\n        callbacks: {\n            onImageUpload: function onImageUpload(files) {\n                if (files.length) {\n                    $(files).each(function () {\n                        var $data = new FormData();\n                        $data.append('image', this);\n\n                        $.ajax({\n                            url: '/upload',\n                            type: 'POST',\n                            dataType: 'json',\n                            data: $data,\n                            enctype: 'multipart/form-data',\n                            processData: false,\n                            contentType: false,\n                            success: function success(data) {\n                                if (data.status != 'error') $(\"[editor]\").summernote('insertImage', data.url);else toastr.error(data.message);\n                            },\n                            error: function error(er) {\n                                toastr.error(er.responseText);\n                            }\n                        });\n                    });\n                }\n            }\n        }\n    });\n});\n\n},{\"./components/Admin\":2}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Admin = function () {\n    function Admin() {\n        _classCallCheck(this, Admin);\n    }\n\n    _createClass(Admin, [{\n        key: \"showWarningAlert\",\n        value: function showWarningAlert(messages, callback) {\n            swal({\n                title: messages.title,\n                text: messages.text,\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: \"#DD6B55\",\n                confirmButtonText: messages.confirm,\n                cancelButtonText: messages.cancel,\n                closeOnConfirm: false,\n                showLoaderOnConfirm: true\n            }, function (isConfirm) {\n                if (isConfirm) callback();\n            });\n        }\n    }], [{\n        key: \"sharedInstance\",\n        value: function sharedInstance() {\n            return new Admin();\n        }\n    }]);\n\n    return Admin;\n}();\n\nexports.default = Admin;\n\n},{}]},{},[1]);\n"],"file":"admin.js","sourceRoot":"/source/"}